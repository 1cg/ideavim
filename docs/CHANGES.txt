History of changes for @NAME@

0.3.2 to @VERSION@

New Features
- A VIM tool window has been added. This is used to show the current mode (if
  :set showmode is set) and any messages normally shown on the last line in
  VIM. To make this useful you should do the following:
  - Show the VIM tool window.
  - Make the VIM tool window docked.
  - Turn off auto-hide for the VIM tool window.
  - Shrink the tool window so just the window title is visible.
  - Do not move the VIM tool window to the left or right - leave on the bottom
    or top.
- Various error messages are now displayed in the new status bar.
- Added support for : register
- Added support for / register

New Commands
- Added support for q{register} command - macro recording.
- Added support for @{register} and @@ commands - playback register contents.
- Added support for :@{register}, :@@, and :@: - run register as command or
  repeat last :@ command.

New :set Options
- showmode is now supported.

Bug Fixes
- Hitting escape while entering a search string resulted in a search for the
  previous search string instead of doing nothing.
- The :registers command didn't display trailing newlines in a register
- Fixed focus problem if user hits escape in the find dialog after entering
  the :find command.
- All the search and substitute commands acted strangely if the text contained
  real tab characters. Tabs are now properly handled.
- gd and gD weren't working in read-only files.

0.3.1 to 0.3.2

New Commands
- Added support for {visual}!{filter}, !{motion}{filter}, and !!{filter}.
- Added support for [p, ]p, [P, ]P - put text but do not autoindent. Note -
  This plugin's support for putting text with or without proper indenting is
  reversed from VIM.

New Features
- Entering a count before the v or V command to start Visual mode is now
  supported.
- Repeating Visual commands is now supported.

Bug Fixes
- Now properly handle :0, :1, and :<negative> commands
- More problems with Visual mode - none of the visual change commands left
  you in insert mode after deleting the text and undo wouldn't put the text
  back.
- Fixed the handling of undo/redo with regard to text added to a file while not
  in insert mode. This can happen with the use of the Generate... menu for
  adding constructors, getters, etc. This also can happen when IDEA adds an
  import statement automatically. This also allows you to undo import
  optimizations!
- Doing a cw or cW when the cursor is already on the end of a word/WORD now
  correctly deletes only the last character of the word/WORD and not the next
  word too.
- gd and gD now properly save the jump location before moving to the
  declaration.
- z<Enter>, z-, and z. now move the cursor to the start of the line.
- Visual mode is now exited after issuing the = or gq command.
- The commands c% and d% where not removing the closing match as expected.
- The d{motion} command now becomes linewise when the motion covers more than
  one line and there is just whitespace before the start and after the end.
- Renamed some source files to avoid problems on case insensitive platforms.
- Entering a count for the . (repeat) command sometimes results in an internal
  error.
- Repeating an R command resulted in the text being inserted instead of
  overwriting old text. This now works properly.
- Issuing a p command when on the last line of a file pasted the line before
  the last line instead of after the last line.

0.3.0 to 0.3.1

New Commands
- Added support for [w, ]w, [b, and ]b. These move the cursor forward to start
  of next camel word, forward to end of next camel word, backward to start of
  previous camel word, and backward to end of previous camel word respectively.
  These are NOT in VIM but are very useful when working with mixed case method
  and variable names. Like their normal w, e, b, and ge counterparts, these may
  be used as operators for the c and d commands.
- :qall, :quitall, :wqall, and :xall - closes all editors.
- :wall - same as :write - save all files.
- :xit and :exit - same :wq - save files and close current editor.
- :close and :hide - same as :quit - close current editor.
- :only - Close all editors except the current editor.
- :display - same as :registers - display register contents.
- :undo - same as u - undo last change.
- :redo - same as Ctrl-R - redo last undone change.
- :wnext - save files and move to next editor.
- :wNext and :wprevious - save files and move to previous editor.

Changed Commands
- ZZ, ZQ, :q and :wq will not exit IDEA anymore

Bug Fixes
- Visual mode became unusable without doing a Ctrl-\ Ctrl-n command after each
  visual mode command. This unstable mode also caused undo to work improperly
  resulting in garbled text.
- Ex commands that take a count instead of a range (:next, :Next, etc.) were
  getting the current line number as the count instead of one.
- The == command can now be repeated with the . command.
- Backslashes (\) in the replace text of a :substitute command was not being
  handled correctly in all cases.

0.2.0 to 0.3.0

Redone Commands
- / and ? and all their variants are now supported properly, including offsets.
- n and N are now supported properly
- Ex command ranges now fully support searches
- :substitute command now fully supports all Vim style search and replaces

New Commands
- Added support for :set. Only a small number of options are supported.
- Load .vimrc or _vimrc from user's home directory. Only set commands are
  honored.
- Added support for *, #, g*, and g# - search for word under cursor.

Supported Set Options
- gdefault - Indicates of the global flag in on by default for the :substitute
  command.
- ignorecase - The default case sensitivity for searchs and substitutes.
- matchpairs - Specify the character pairs used by the % command
- more - Indicates whether 'more' is used or not for display windows
- scroll - Specifies the number of lines scrolled by the Ctrl-D and Ctrl-U
  commands. Set to zero for half page.
- selection - Specifies how the cursor can be moved at the ends of lines in
  Visual mode. It also controls whether the Visual mode selection is inclusive
  or exclusive.
- smartcase - Overrides ignorecase if set and pattern has uppercase characters.
- undolevels - Set to 0 for Vi style undo (1 level). Set to other number to
  specify how many levels of undo are supported per editor.
- visualbell - controls whether the plugin beeps or not.
- wrapscan - Determines is searches wrap around the start or end of the file.

0.1.1 to 0.2.0

New Commands
- Added support for Ctrl-U while in insert mode
- Added support for 0 Ctrl-D to remove all indent in current line
- Added support for F1 while in insert - exit insert and bring up help topics
- Added support for F1 while in normal mode - bring up help topics
- Added support for :promptfind - Brings up Search Dialog
- Added support for :promptrepl - Brings up Search/Replace Dialog
- Added real support for :substitute - search and replace
- Added support for :& - search and replace
- Added support for :~ - search and replace
- Added support for @: - repeat last Ex command
- Added support for :{range}!{filter} [arg] command - filter text
- Added support for :{range}!! command - repeat filter
- Added support for :marks - display marks
- Added support for :registers - display registers

Bug Fixes
- Using the '%' range in Ex commands ignored the first line
- Selecting a register for a command after using Ctrl-O in insert mode sent
  the user back to insert mode before they could enter the command.
- Many commands caused exceptions if the current file is empty.
- Let mouse clicks move cursor to end-of-line while in Insert or Replace mode.

Keymappings - Install new plugin.xml or manually add keymapping
- F1

0.1.0 to 0.1.1
- Fixed text of README file (NAME and VERSION weren't properly substituted)
- Fixed issue with pressing Enter when entering an Ex command (no more beep or
  IDEA error message)
- Fixed issue with pressing Backspace in the Ex command entry window when there
  are no characters. The beep is gone and the command entry is properly exited.