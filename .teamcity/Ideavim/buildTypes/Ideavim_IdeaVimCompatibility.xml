<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>IdeaVim compatibility with external plugins</name>
  <description />
  <settings>
    <options>
      <option name="branchFilter" value="+:&lt;default&gt;" />
    </options>
    <parameters />
    <build-runners>
      <runner id="RUNNER_1" name="Load Verifier" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[mkdir verifier1
curl -f -L -o verifier1/verifier-cli-dev-all-1.jar "https://packages.jetbrains.team/files/p/ideavim/plugin-verifier/verifier-cli-dev-all-1.jar"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="Check" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[# We use a custom build of verifier that downloads IdeaVim from dev channel
# To create a custom build: Download plugin verifier repo, add an if that switches to dev channel for IdeaVim repo
# At the moment it's com.jetbrains.pluginverifier.repository.repositories.marketplace.MarketplaceRepository#getLastCompatibleVersionOfPlugin
# Build using gradlew :intellij-plugin-verifier:verifier-cli:shadowJar
# Upload verifier-cli-dev-all.jar artifact to the repo in IdeaVim space repo

java --version
java -jar verifier1/verifier-cli-dev-all-1.jar check-plugin '$org.jetbrains.IdeaVim-EasyMotion' [latest-IU] -team-city
java -jar verifier1/verifier-cli-dev-all-1.jar check-plugin '$io.github.mishkun.ideavimsneak' [latest-IU] -team-city
java -jar verifier1/verifier-cli-dev-all-1.jar check-plugin '$eu.theblob42.idea.whichkey' [latest-IU] -team-city
java -jar verifier1/verifier-cli-dev-all-1.jar check-plugin '$IdeaVimExtension' [latest-IU] -team-city
# Outdated java -jar verifier/verifier-cli-dev-all.jar check-plugin '$github.zgqq.intellij-enhance' [latest-IU] -team-city
java -jar verifier1/verifier-cli-dev-all-1.jar check-plugin '$com.github.copilot' [latest-IU] -team-city
java -jar verifier1/verifier-cli-dev-all-1.jar check-plugin '$com.github.dankinsoid.multicursor' [latest-IU] -team-city
java -jar verifier1/verifier-cli-dev-all-1.jar check-plugin '$com.joshestein.ideavim-quickscope' [latest-IU] -team-city]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Ideavim_HttpsGithubComJetBrainsIdeavimRefsHeadsMaster" />
    </vcs-settings>
    <requirements>
      <equals id="RQ_1" name="teamcity.agent.hardware.cpuCount" value="4" />
      <equals id="RQ_2" name="teamcity.agent.os.family" value="Linux" />
    </requirements>
    <build-triggers>
      <build-trigger id="TRIGGER_1" type="schedulingTrigger">
        <parameters>
          <param name="branchFilter" value="" />
          <param name="cronExpression_dm" value="*" />
          <param name="cronExpression_dw" value="?" />
          <param name="cronExpression_hour" value="*" />
          <param name="cronExpression_min" value="0" />
          <param name="cronExpression_month" value="*" />
          <param name="cronExpression_sec" value="0" />
          <param name="cronExpression_year" value="*" />
          <param name="dayOfWeek" value="Sunday" />
          <param name="enableQueueOptimization" value="true" />
          <param name="hour" value="4" />
          <param name="minute" value="0" />
          <param name="promoteWatchedBuild" value="true" />
          <param name="revisionRule" value="lastFinished" />
          <param name="revisionRuleBuildBranch" value="+:&lt;default&gt;" />
          <param name="schedulingPolicy" value="daily" />
          <param name="timezone" value="SERVER" />
          <param name="triggerBuildIfWatchedBuildChanges" value="" />
          <param name="triggerBuildWithPendingChangesOnly" value="" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="BUILD_EXT_1" type="golang">
        <parameters>
          <param name="test.format" value="json" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</build-type>

